name: Data Ingestion Pipeline

on:
  schedule:
    # Daily at 06:00 UTC - Pollen forecast (5-day forecast)
    - cron: '0 6 * * *'
    # Daily at 08:15 UTC - Weather data (yesterday's data)
    - cron: '15 8 * * *'
    # Weekly Monday at 09:00 UTC - FHI health vaccinations
    - cron: '0 9 * * 1'
    # Monthly on 5th at 10:00 UTC - SSB macro indicators
    - cron: '0 10 5 * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      source:
        description: 'Data source to ingest'
        required: true
        type: choice
        options:
          - all
          - weather
          - pollen
          - fhi
          - macro

jobs:
  ingest-pollen:
    name: Ingest Pollen Forecast
    runs-on: ubuntu-latest
    if: |
      (github.event.schedule == '0 6 * * *') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.source == 'all' || github.event.inputs.source == 'pollen'))

    steps:
      - name: Fetch Google Pollen API data
        id: fetch
        run: |
          RESPONSE=$(curl -w "\n%{http_code}" -X GET \
            "https://epokqlkkiknvhromsufb.supabase.co/functions/v1/ingest-pollen?days=5" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"

          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::Pollen ingestion failed with HTTP $HTTP_CODE"
            exit 1
          fi

          RECORDS=$(echo "$BODY" | jq -r '.records_inserted')
          echo "::notice::Successfully ingested $RECORDS pollen records"
          echo "records=$RECORDS" >> $GITHUB_OUTPUT

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🌸 Pollen Ingestion Failed',
              body: `Pollen data ingestion failed on ${new Date().toISOString()}\n\nWorkflow: ${context.workflow}\nRun: ${context.runId}`,
              labels: ['data-pipeline', 'bug']
            })

  ingest-weather:
    name: Ingest Weather Data
    runs-on: ubuntu-latest
    if: |
      (github.event.schedule == '15 8 * * *') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.source == 'all' || github.event.inputs.source == 'weather'))

    steps:
      - name: Fetch MET Weather data
        id: fetch
        run: |
          # Fetch yesterday's data (MET has ~12 hour delay)
          YESTERDAY=$(date -u -d '1 day ago' +%Y-%m-%d)

          RESPONSE=$(curl -w "\n%{http_code}" -X GET \
            "https://epokqlkkiknvhromsufb.supabase.co/functions/v1/ingest-met-weather?date=$YESTERDAY&backfill_days=1" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"

          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::Weather ingestion failed with HTTP $HTTP_CODE"
            exit 1
          fi

          RECORDS=$(echo "$BODY" | jq -r '.records_inserted')
          echo "::notice::Successfully ingested $RECORDS weather records for $YESTERDAY"
          echo "records=$RECORDS" >> $GITHUB_OUTPUT
          echo "date=$YESTERDAY" >> $GITHUB_OUTPUT

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🌤️ Weather Ingestion Failed',
              body: `Weather data ingestion failed on ${new Date().toISOString()}\n\nWorkflow: ${context.workflow}\nRun: ${context.runId}`,
              labels: ['data-pipeline', 'bug']
            })

  ingest-fhi:
    name: Ingest FHI Health Data
    runs-on: ubuntu-latest
    if: |
      (github.event.schedule == '0 9 * * 1') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.source == 'all' || github.event.inputs.source == 'fhi'))

    steps:
      - name: Fetch FHI SYSVAK vaccination data
        id: fetch
        run: |
          RESPONSE=$(curl -w "\n%{http_code}" -X GET \
            "https://epokqlkkiknvhromsufb.supabase.co/functions/v1/ingest-fhi-health?weeks_back=12" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"

          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::FHI ingestion failed with HTTP $HTTP_CODE"
            exit 1
          fi

          RECORDS=$(echo "$BODY" | jq -r '.records_inserted')
          WEEKS=$(echo "$BODY" | jq -r '.weeks_fetched')
          echo "::notice::Successfully ingested $RECORDS FHI vaccination records ($WEEKS weeks)"
          echo "records=$RECORDS" >> $GITHUB_OUTPUT

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🏥 FHI Health Ingestion Failed',
              body: `FHI health data ingestion failed on ${new Date().toISOString()}\n\nWorkflow: ${context.workflow}\nRun: ${context.runId}`,
              labels: ['data-pipeline', 'bug']
            })

  ingest-macro:
    name: Ingest Macro Indicators
    runs-on: ubuntu-latest
    if: |
      (github.event.schedule == '0 10 5 * *') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.source == 'all' || github.event.inputs.source == 'macro'))

    steps:
      - name: Fetch SSB CPI data
        id: fetch
        run: |
          RESPONSE=$(curl -w "\n%{http_code}" -X GET \
            "https://epokqlkkiknvhromsufb.supabase.co/functions/v1/ingest-macro?months=3" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_KEY }}")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')

          echo "Response: $BODY"
          echo "HTTP Code: $HTTP_CODE"

          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "::error::Macro ingestion failed with HTTP $HTTP_CODE"
            exit 1
          fi

          RECORDS=$(echo "$BODY" | jq -r '.records_inserted')
          echo "::notice::Successfully ingested $RECORDS macro indicator records"
          echo "records=$RECORDS" >> $GITHUB_OUTPUT

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '📊 Macro Indicators Ingestion Failed',
              body: `Macro indicators ingestion failed on ${new Date().toISOString()}\n\nWorkflow: ${context.workflow}\nRun: ${context.runId}`,
              labels: ['data-pipeline', 'bug']
            })

  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [ingest-pollen, ingest-weather, ingest-fhi, ingest-macro]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## 📊 Data Ingestion Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run Date:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Job Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Pollen | ${{ needs.ingest-pollen.result == 'success' && '✅' || needs.ingest-pollen.result == 'skipped' && '⏭️' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Weather | ${{ needs.ingest-weather.result == 'success' && '✅' || needs.ingest-weather.result == 'skipped' && '⏭️' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| FHI Health | ${{ needs.ingest-fhi.result == 'success' && '✅' || needs.ingest-fhi.result == 'skipped' && '⏭️' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Macro | ${{ needs.ingest-macro.result == 'success' && '✅' || needs.ingest-macro.result == 'skipped' && '⏭️' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
